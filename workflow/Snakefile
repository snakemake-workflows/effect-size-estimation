configfile: "config/config.yaml"


rule all:
    input:
        collect(
            "results/plots/{dataset}/bootstrap_{type}.html",
            dataset=config["datasets"],
            type=["histograms"],
        ),
        collect(
            "results/plots/{dataset}/distributions.html",
            dataset=config["datasets"],
        )


rule sort_data:
    input:
        lookup("datasets/{dataset}/path", within=config)
    output:
        "results/data/{dataset}.sorted.parquet"
    params:
        order=lookup("datasets/{dataset}/order", within=config),
    conda:
        "envs/pystats.yaml"
    script:
        "scripts/sort_order.py"


rule bootstrap:
    input:
        data="results/data/{dataset}.sorted.parquet",
    output:
        hists="results/bootstrap/histograms/{dataset}.parquet",
        cis="results/bootstrap/confidence_intervals/{dataset}.parquet"
    params:
        vars=lookup("datasets/{dataset}/vars", within=config),
        n_bootstraps=config["n_bootstraps"],
        seed=config["seed"],
        value=lookup("datasets/{dataset}/value", within=config),
    conda:
        "envs/pystats.yaml"
    script:
        "scripts/bootstrap.py"


rule plot_bootstrap_histograms:
    input:
        "results/bootstrap/histograms/{dataset}.parquet"
    output:
        "results/plots/{dataset}/bootstrap_histograms.html"
    params:
        vars=lookup("datasets/{dataset}/vars", within=config),
    conda:
        "envs/pystats.yaml"
    script:
        "scripts/plot_bootstrap_histograms.py"


rule plot_distributions:
    input:
        cis="results/bootstrap/confidence_intervals/{dataset}.parquet",
        data="results/data/{dataset}.sorted.parquet",
    output:
        "results/plots/{dataset}/distributions.html"
    params:
        vars=lookup("datasets/{dataset}/vars", within=config),
        value=lookup("datasets/{dataset}/value", within=config),
    conda:
        "envs/pystats.yaml"
    script:
        "scripts/plot_distributions.py"